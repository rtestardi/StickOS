typedef unsigned char uint8;
typedef unsigned short int uint16;
typedef unsigned long int uint32;
typedef signed char int8;
typedef signed short int int16;
typedef signed long int int32;
typedef volatile uint8 vuint8;
typedef volatile uint16 vuint16;
typedef volatile uint32 vuint32;
#if ! GCC
#pragma define_section system ".system" far_absolute RW
extern __declspec(system) uint8 __IPSBAR[];
extern __declspec(system) uint8 __RAMBAR[];
extern __declspec(system) uint8 __RAMBAR_SIZE[];
extern __declspec(system) uint8 __FLASHBAR[];
extern __declspec(system) uint8 __FLASHBAR_SIZE[];
#define IPSBAR_ADDRESS  (uint32)__IPSBAR
#define RAMBAR_ADDRESS  (uint32)__RAMBAR
#define RAMBAR_SIZE  (uint32)__RAMBAR_SIZE
#define FLASHBAR_ADDRESS  (uint32)__FLASHBAR
#define FLASHBAR_SIZE  (uint32)__FLASHBAR_SIZE
#endif
#if MCF52221
#define MCF_ADC_ADLST1 (*(vuint16*)(&__IPSBAR[0x190006]))
#define MCF_ADC_ADLST2 (*(vuint16*)(&__IPSBAR[0x190008]))
#define MCF_ADC_ADRSLT(x) (*(vuint16*)(&__IPSBAR[0x190012 + ((x)*0x2)]))
#define MCF_ADC_ADSDIS (*(vuint16*)(&__IPSBAR[0x19000A]))
#define MCF_ADC_ADSTAT (*(vuint16*)(&__IPSBAR[0x19000C]))
#define MCF_ADC_CTRL1 (*(vuint16*)(&__IPSBAR[0x190000]))
#define MCF_ADC_CTRL1_SMODE(x) (((x)&0x7)<<0)
#define MCF_ADC_CTRL1_START0 (0x2000)
#define MCF_ADC_CTRL2 (*(vuint16*)(&__IPSBAR[0x190002]))
#define MCF_ADC_POWER (*(vuint16*)(&__IPSBAR[0x190052]))
#define MCF_ADC_POWER_PD0 (0x1)
#define MCF_ADC_POWER_PD1 (0x2)
#define MCF_ADC_POWER_PD2 (0x4)
#define MCF_ADC_POWER_PUDELAY(x) (((x)&0x3F)<<0x4)
#define MCF_CFM_CFMCLKD (*(vuint8 *)(&__IPSBAR[0x1D0002]))
#define MCF_CFM_CFMCLKD_DIV(x) (((x)&0x3F)<<0)
#define MCF_CFM_CFMCLKD_DIVLD (0x80)
#define MCF_CFM_CFMCLKD_PRDIV8 (0x40)
#define MCF_CFM_CFMCMD (*(vuint8 *)(&__IPSBAR[0x1D0024]))
#define MCF_CFM_CFMCMD_PAGE_ERASE (0x40)
#define MCF_CFM_CFMCMD_WORD_PROGRAM (0x20)
#define MCF_CFM_CFMDACC (*(vuint32*)(&__IPSBAR[0x1D0018]))
#define MCF_CFM_CFMMCR (*(vuint16*)(&__IPSBAR[0x1D0000]))
#define MCF_CFM_CFMPROT (*(vuint32*)(&__IPSBAR[0x1D0010]))
#define MCF_CFM_CFMSACC (*(vuint32*)(&__IPSBAR[0x1D0014]))
#define MCF_CFM_CFMSEC_SECSTAT (0x40000000)
#define MCF_CFM_CFMUSTAT (*(vuint8 *)(&__IPSBAR[0x1D0020]))
#define MCF_CFM_CFMUSTAT_ACCERR (0x10)
#define MCF_CFM_CFMUSTAT_CBEIF (0x80)
#define MCF_CFM_CFMUSTAT_CCIF (0x40)
#define MCF_CFM_CFMUSTAT_PVIOL (0x20)
#define MCF_CLOCK_CCHR (*(vuint8 *)(&__IPSBAR[0x120008]))
#define MCF_CLOCK_CCLR (*(vuint8 *)(&__IPSBAR[0x120009]))
#define MCF_CLOCK_OCHR (*(vuint8 *)(&__IPSBAR[0x12000A]))
#define MCF_CLOCK_OCLR (*(vuint8 *)(&__IPSBAR[0x12000B]))
#define MCF_CLOCK_RTCDR (*(vuint32*)(&__IPSBAR[0x12000C]))
#define MCF_CLOCK_SYNCR (*(vuint16*)(&__IPSBAR[0x120000]))
#define MCF_CLOCK_SYNCR_CLKSRC (0x4)
#define MCF_CLOCK_SYNCR_DISCLK (0x40)
#define MCF_CLOCK_SYNCR_MFD(x) (((x)&0x7)<<0xC)
#define MCF_CLOCK_SYNCR_PLLEN (0x1)
#define MCF_CLOCK_SYNCR_PLLMODE (0x2)
#define MCF_CLOCK_SYNSR (*(vuint8 *)(&__IPSBAR[0x120002]))
#define MCF_CLOCK_SYNSR_LOCK (0x8)
#define MCF_CLOCK_SYNSR_OCOSC (0x40)
#define MCF_DTIM0_DTMR (*(vuint16*)(&__IPSBAR[0x400]))
#define MCF_DTIM1_DTMR (*(vuint16*)(&__IPSBAR[0x440]))
#define MCF_DTIM2_DTMR (*(vuint16*)(&__IPSBAR[0x480]))
#define MCF_DTIM3_DTMR (*(vuint16*)(&__IPSBAR[0x4C0]))
#define MCF_DTIM_DTCN(x) (*(vuint32*)(&__IPSBAR[0x40C + ((x)*0x40)]))
#define MCF_DTIM_DTMR_CLK_DIV1 (0x2)
#define MCF_DTIM_DTMR_FRR (0x8)
#define MCF_DTIM_DTMR_OM (0x20)
#define MCF_DTIM_DTMR_RST (0x1)
#define MCF_DTIM_DTRR(x) (*(vuint32*)(&__IPSBAR[0x404 + ((x)*0x40)]))
#define MCF_EPORT_EPFR (*(vuint8 *)(&__IPSBAR[0x130006]))
#define MCF_EPORT_EPIER (*(vuint8 *)(&__IPSBAR[0x130003]))
#define MCF_EPORT_EPIER_EPIE1 (0x2)
#define MCF_EPORT_EPIER_EPIE4 (0x10)
#define MCF_EPORT_EPPAR (*(vuint16*)(&__IPSBAR[0x130000]))
#define MCF_EPORT_EPPAR_EPPA1_BOTH (0xC)
#define MCF_EPORT_EPPAR_EPPA1_LEVEL (0)
#define MCF_EPORT_EPPAR_EPPA4_BOTH (0x300)
#define MCF_EPORT_EPPAR_EPPA4_LEVEL (0)
#define MCF_EPORT_EPPDR (*(vuint8 *)(&__IPSBAR[0x130005]))
#define MCF_EPORT_EPPDR_EPPD1 (0x2)
#define MCF_GPIO_CLRAN (*(vuint8 *)(&__IPSBAR[0x100052]))
#define MCF_GPIO_CLRAS (*(vuint8 *)(&__IPSBAR[0x100053]))
#define MCF_GPIO_CLRNQ (*(vuint8 *)(&__IPSBAR[0x100050]))
#define MCF_GPIO_CLRQS (*(vuint8 *)(&__IPSBAR[0x100054]))
#define MCF_GPIO_CLRTA (*(vuint8 *)(&__IPSBAR[0x100056]))
#define MCF_GPIO_CLRTC (*(vuint8 *)(&__IPSBAR[0x100057]))
#define MCF_GPIO_CLRUA (*(vuint8 *)(&__IPSBAR[0x100059]))
#define MCF_GPIO_CLRUB (*(vuint8 *)(&__IPSBAR[0x10005A]))
#define MCF_GPIO_CLRUC (*(vuint8 *)(&__IPSBAR[0x10005B]))
#define MCF_GPIO_DDRAN (*(vuint8 *)(&__IPSBAR[0x100022]))
#define MCF_GPIO_DDRAS (*(vuint8 *)(&__IPSBAR[0x100023]))
#define MCF_GPIO_DDRNQ (*(vuint8 *)(&__IPSBAR[0x100020]))
#define MCF_GPIO_DDRQS (*(vuint8 *)(&__IPSBAR[0x100024]))
#define MCF_GPIO_DDRTA (*(vuint8 *)(&__IPSBAR[0x100026]))
#define MCF_GPIO_DDRTC (*(vuint8 *)(&__IPSBAR[0x100027]))
#define MCF_GPIO_DDRUA (*(vuint8 *)(&__IPSBAR[0x100029]))
#define MCF_GPIO_DDRUB (*(vuint8 *)(&__IPSBAR[0x10002A]))
#define MCF_GPIO_DDRUC (*(vuint8 *)(&__IPSBAR[0x10002B]))
#define MCF_GPIO_PANPAR (*(vuint8 *)(&__IPSBAR[0x10006A]))
#define MCF_GPIO_PASPAR (*(vuint8 *)(&__IPSBAR[0x10006B]))
#define MCF_GPIO_PDDPAR (*(vuint8 *)(&__IPSBAR[0x100074]))
#define MCF_GPIO_PNQPAR (*(vuint16*)(&__IPSBAR[0x100068]))
#define MCF_GPIO_PORTAN (*(vuint8 *)(&__IPSBAR[0x10000A]))
#define MCF_GPIO_PQSPAR (*(vuint16*)(&__IPSBAR[0x10006C]))
#define MCF_GPIO_PTAPAR (*(vuint8 *)(&__IPSBAR[0x10006E]))
#define MCF_GPIO_PTCPAR (*(vuint8 *)(&__IPSBAR[0x10006F]))
#define MCF_GPIO_PUAPAR (*(vuint8 *)(&__IPSBAR[0x100071]))
#define MCF_GPIO_PUBPAR (*(vuint8 *)(&__IPSBAR[0x100072]))
#define MCF_GPIO_PUCPAR (*(vuint8 *)(&__IPSBAR[0x100073]))
#define MCF_GPIO_SETAN (*(vuint8 *)(&__IPSBAR[0x10003A]))
#define MCF_GPIO_SETAS (*(vuint8 *)(&__IPSBAR[0x10003B]))
#define MCF_GPIO_SETNQ (*(vuint8 *)(&__IPSBAR[0x100038]))
#define MCF_GPIO_SETQS (*(vuint8 *)(&__IPSBAR[0x10003C]))
#define MCF_GPIO_SETTA (*(vuint8 *)(&__IPSBAR[0x10003E]))
#define MCF_GPIO_SETTC (*(vuint8 *)(&__IPSBAR[0x10003F]))
#define MCF_GPIO_SETUA (*(vuint8 *)(&__IPSBAR[0x100041]))
#define MCF_GPIO_SETUB (*(vuint8 *)(&__IPSBAR[0x100042]))
#define MCF_GPIO_SETUC (*(vuint8 *)(&__IPSBAR[0x100043]))
#define MCF_I2C_I2CR (*(vuint8 *)(&__IPSBAR[0x308]))
#define MCF_I2C_I2CR_IEN (0x80)
#define MCF_I2C_I2CR_MSTA (0x20)
#define MCF_I2C_I2CR_MTX (0x10)
#define MCF_I2C_I2CR_RSTA (0x4)
#define MCF_I2C_I2CR_TXAK (0x8)
#define MCF_I2C_I2DR (*(vuint8 *)(&__IPSBAR[0x310]))
#define MCF_I2C_I2FDR (*(vuint8 *)(&__IPSBAR[0x304]))
#define MCF_I2C_I2FDR_IC(x) (((x)&0x3F)<<0)
#define MCF_I2C_I2SR (*(vuint8 *)(&__IPSBAR[0x30C]))
#define MCF_I2C_I2SR_IAL (0x10)
#define MCF_I2C_I2SR_IBB (0x20)
#define MCF_I2C_I2SR_IIF (0x2)
#define MCF_I2C_I2SR_RXAK (0x1)
#define MCF_INTC0_ICR01 (*(vuint8 *)(&__IPSBAR[0xC41]))
#define MCF_INTC0_ICR04 (*(vuint8 *)(&__IPSBAR[0xC44]))
#define MCF_INTC0_ICR13 (*(vuint8 *)(&__IPSBAR[0xC4D]))
#define MCF_INTC0_ICR53 (*(vuint8 *)(&__IPSBAR[0xC75]))
#define MCF_INTC0_ICR55 (*(vuint8 *)(&__IPSBAR[0xC77]))
#define MCF_INTC0_IMRH (*(vuint32*)(&__IPSBAR[0xC08]))
#define MCF_INTC0_IMRL (*(vuint32*)(&__IPSBAR[0xC0C]))
#define MCF_INTC_ICR_IL(x) (((x)&0x7)<<0x3)
#define MCF_INTC_ICR_IP(x) (((x)&0x7)<<0)
#define MCF_INTC_IMRH_INT_MASK53 (0x200000)
#define MCF_INTC_IMRH_INT_MASK55 (0x800000)
#define MCF_INTC_IMRL_INT_MASK1 (0x2)
#define MCF_INTC_IMRL_INT_MASK13 (0x2000)
#define MCF_INTC_IMRL_INT_MASK4 (0x10)
#define MCF_INTC_IMRL_MASKALL (0x1)
#define MCF_PIT0_PCSR (*(vuint16*)(&__IPSBAR[0x150000]))
#define MCF_PIT0_PMR (*(vuint16*)(&__IPSBAR[0x150002]))
#define MCF_PIT_PCSR_DBG (0x20)
#define MCF_PIT_PCSR_DOZE (0x40)
#define MCF_PIT_PCSR_EN (0x1)
#define MCF_PIT_PCSR_OVW (0x10)
#define MCF_PIT_PCSR_PIE (0x8)
#define MCF_PIT_PCSR_PIF (0x4)
#define MCF_PIT_PCSR_PRE(x) (((x)&0xF)<<0x8)
#define MCF_PIT_PCSR_RLD (0x2)
#define MCF_PMM_LPCR (*(vuint8 *)(&__IPSBAR[0x110007]))
#define MCF_PMM_LPCR_LPMD_DOZE (0x40)
#define MCF_PMM_LPCR_LPMD_STOP (0xC0)
#define MCF_PMM_LPICR (*(vuint8 *)(&__IPSBAR[0x12]))
#define MCF_PMM_LPICR_ENBSTOP (0x80)
#define MCF_PMM_LPICR_XLPM_IPL(x) (((x)&0x7)<<0x4)
#define MCF_PWM_PWMCLK (*(vuint8 *)(&__IPSBAR[0x1B0002]))
#define MCF_PWM_PWMDTY(x) (*(vuint8 *)(&__IPSBAR[0x1B001C + ((x)*0x1)]))
#define MCF_PWM_PWME (*(vuint8 *)(&__IPSBAR[0x1B0000]))
#define MCF_PWM_PWMPER0 (*(vuint8 *)(&__IPSBAR[0x1B0014]))
#define MCF_PWM_PWMPER1 (*(vuint8 *)(&__IPSBAR[0x1B0015]))
#define MCF_PWM_PWMPER2 (*(vuint8 *)(&__IPSBAR[0x1B0016]))
#define MCF_PWM_PWMPER3 (*(vuint8 *)(&__IPSBAR[0x1B0017]))
#define MCF_PWM_PWMPER4 (*(vuint8 *)(&__IPSBAR[0x1B0018]))
#define MCF_PWM_PWMPER5 (*(vuint8 *)(&__IPSBAR[0x1B0019]))
#define MCF_PWM_PWMPER6 (*(vuint8 *)(&__IPSBAR[0x1B001A]))
#define MCF_PWM_PWMPER7 (*(vuint8 *)(&__IPSBAR[0x1B001B]))
#define MCF_PWM_PWMPRCLK (*(vuint8 *)(&__IPSBAR[0x1B0003]))
#define MCF_PWM_PWMPRCLK_PCKA(x) (((x)&0x7)<<0)
#define MCF_PWM_PWMPRCLK_PCKB(x) (((x)&0x7)<<0x4)
#define MCF_PWM_PWMSCLA (*(vuint8 *)(&__IPSBAR[0x1B0008]))
#define MCF_PWM_PWMSCLB (*(vuint8 *)(&__IPSBAR[0x1B0009]))
#define MCF_QSPI_QAR (*(vuint16*)(&__IPSBAR[0x350]))
#define MCF_QSPI_QAR_CMD (0x20)
#define MCF_QSPI_QAR_RECV (0x10)
#define MCF_QSPI_QAR_TRANS (0)
#define MCF_QSPI_QDLYR (*(vuint16*)(&__IPSBAR[0x344]))
#define MCF_QSPI_QDLYR_SPE (0x8000)
#define MCF_QSPI_QDR (*(vuint16*)(&__IPSBAR[0x354]))
#define MCF_QSPI_QDR_CONT (0x8000)
#define MCF_QSPI_QIR (*(vuint16*)(&__IPSBAR[0x34C]))
#define MCF_QSPI_QIR_SPIF (0x1)
#define MCF_QSPI_QMR (*(vuint16*)(&__IPSBAR[0x340]))
#define MCF_QSPI_QMR_CPHA (0x100)
#define MCF_QSPI_QMR_CPOL (0x200)
#define MCF_QSPI_QMR_MSTR (0x8000)
#define MCF_QSPI_QWR (*(vuint16*)(&__IPSBAR[0x348]))
#define MCF_QSPI_QWR_ENDQP(x) (((x)&0xF)<<0x8)
#define MCF_QSPI_QWR_NEWQP(x) (((x)&0xF)<<0)
#define MCF_RCM_RCR (*(vuint8 *)(&__IPSBAR[0x110000]))
#define MCF_RCM_RCR_SOFTRST (0x80)
#define MCF_RCM_RSR (*(vuint8 *)(&__IPSBAR[0x110001]))
#define MCF_SCM_CWCR (*(vuint8 *)(&__IPSBAR[0x11]))
#define MCF_SCM_PPMRH (*(vuint32*)(&__IPSBAR[0xC]))
#define MCF_SCM_PPMRH_CDPIT1 (0x10)
#define MCF_SCM_PPMRL (*(vuint32*)(&__IPSBAR[0x18]))
#define MCF_SCM_RAMBAR (*(vuint32*)(&__IPSBAR[0x8]))
#define MCF_SCM_RAMBAR_BA(x) ((x)&0xFFFF0000)
#define MCF_SCM_RAMBAR_BDE (0x200)
#define MCF_UART0_UIMR (*(vuint8 *)(&__IPSBAR[0x214]))
#define MCF_UART_UBG1(x) (*(vuint8 *)(&__IPSBAR[0x218 + ((x)*0x40)]))
#define MCF_UART_UBG2(x) (*(vuint8 *)(&__IPSBAR[0x21C + ((x)*0x40)]))
#define MCF_UART_UCR(x) (*(vuint8 *)(&__IPSBAR[0x208 + ((x)*0x40)]))
#define MCF_UART_UCR_RESET_MR (0x10)
#define MCF_UART_UCR_RESET_RX (0x20)
#define MCF_UART_UCR_RESET_TX (0x30)
#define MCF_UART_UCR_RX_DISABLED (0x2)
#define MCF_UART_UCR_RX_ENABLED (0x1)
#define MCF_UART_UCR_TX_DISABLED (0x8)
#define MCF_UART_UCR_TX_ENABLED (0x4)
#define MCF_UART_UCSR(x) (*(vuint8 *)(&__IPSBAR[0x204 + ((x)*0x40)]))
#define MCF_UART_UCSR_RCS_SYS_CLK (0xD0)
#define MCF_UART_UCSR_TCS_SYS_CLK (0xD)
#define MCF_UART_UIMR_FFULL_RXRDY (0x2)
#define MCF_UART_UMR(x) (*(vuint8 *)(&__IPSBAR[0x200 + ((x)*0x40)]))
#define MCF_UART_UMR_CM_LOCAL_LOOP (0x80)
#define MCF_UART_UMR_PM_EVEN (0)
#define MCF_UART_UMR_PM_NONE (0x10)
#define MCF_UART_UMR_PM_ODD (0x4)
#define MCF_UART_UMR_SB_STOP_BITS_2 (0xF)
#define MCF_UART_URB(x) (*(vuint8 *)(&__IPSBAR[0x20C + ((x)*0x40)]))
#define MCF_UART_USR(x) (*(vuint8 *)(&__IPSBAR[0x204 + ((x)*0x40)]))
#define MCF_UART_USR_RXRDY (0x1)
#define MCF_UART_USR_TXEMP (0x8)
#define MCF_UART_USR_TXRDY (0x4)
#define MCF_UART_UTB(x) (*(vuint8 *)(&__IPSBAR[0x20C + ((x)*0x40)]))
#define MCF_USB_OTG_ADDR (*(vuint8 *)(&__IPSBAR[0x1C0098]))
#define MCF_USB_OTG_ADDR_LS_EN (0x80)
#define MCF_USB_OTG_BDT_PAGE_01 (*(vuint8 *)(&__IPSBAR[0x1C009C]))
#define MCF_USB_OTG_BDT_PAGE_02 (*(vuint8 *)(&__IPSBAR[0x1C00B0]))
#define MCF_USB_OTG_BDT_PAGE_03 (*(vuint8 *)(&__IPSBAR[0x1C00B4]))
#define MCF_USB_OTG_CTL (*(vuint8 *)(&__IPSBAR[0x1C0094]))
#define MCF_USB_OTG_CTL_HOST_MODE_EN (0x8)
#define MCF_USB_OTG_CTL_JSTATE (0x80)
#define MCF_USB_OTG_CTL_ODD_RST (0x2)
#define MCF_USB_OTG_CTL_RESET (0x10)
#define MCF_USB_OTG_CTL_TXSUSPEND_TOKENBUSY (0x20)
#define MCF_USB_OTG_CTL_USB_EN_SOF_EN (0x1)
#define MCF_USB_OTG_ENDPT(x) (*(vuint8 *)(&__IPSBAR[0x1C00C0 + ((x)*0x4)]))
#define MCF_USB_OTG_ENDPT0 (*(vuint8 *)(&__IPSBAR[0x1C00C0]))
#define MCF_USB_OTG_ENDPT_EP_CTL_DIS (0x10)
#define MCF_USB_OTG_ENDPT_EP_HSHK (0x1)
#define MCF_USB_OTG_ENDPT_EP_RX_EN (0x8)
#define MCF_USB_OTG_ENDPT_EP_TX_EN (0x4)
#define MCF_USB_OTG_ENDPT_HOST_WO_HUB (0x80)
#define MCF_USB_OTG_ENDPT_RETRY_DIS (0x40)
#define MCF_USB_OTG_INT_ENB (*(vuint8 *)(&__IPSBAR[0x1C0084]))
#define MCF_USB_OTG_INT_ENB_ATTACH_EN (0x40)
#define MCF_USB_OTG_INT_ENB_SLEEP_EN (0x10)
#define MCF_USB_OTG_INT_ENB_TOK_DNE_EN (0x8)
#define MCF_USB_OTG_INT_ENB_USB_RST_EN (0x1)
#define MCF_USB_OTG_INT_STAT (*(vuint8 *)(&__IPSBAR[0x1C0080]))
#define MCF_USB_OTG_INT_STAT_ATTACH (0x40)
#define MCF_USB_OTG_INT_STAT_ERROR (0x2)
#define MCF_USB_OTG_INT_STAT_RESUME (0x20)
#define MCF_USB_OTG_INT_STAT_SLEEP (0x10)
#define MCF_USB_OTG_INT_STAT_STALL (0x80)
#define MCF_USB_OTG_INT_STAT_TOK_DNE (0x8)
#define MCF_USB_OTG_INT_STAT_USB_RST (0x1)
#define MCF_USB_OTG_OTG_CTRL (*(vuint8 *)(&__IPSBAR[0x1C001C]))
#define MCF_USB_OTG_OTG_CTRL_DM_LOW (0x10)
#define MCF_USB_OTG_OTG_CTRL_DP_HIGH (0x80)
#define MCF_USB_OTG_OTG_CTRL_DP_LOW (0x20)
#define MCF_USB_OTG_OTG_CTRL_OTG_EN (0x4)
#define MCF_USB_OTG_SOF_THLD (*(vuint8 *)(&__IPSBAR[0x1C00AC]))
#define MCF_USB_OTG_STAT (*(vuint8 *)(&__IPSBAR[0x1C0090]))
#define MCF_USB_OTG_STAT_ODD (0x4)
#define MCF_USB_OTG_STAT_TX (0x8)
#define MCF_USB_OTG_TOKEN (*(vuint8 *)(&__IPSBAR[0x1C00A8]))
#define MCF_USB_OTG_TOKEN_TOKEN_ENDPT(x) (((x)&0xF)<<0)
#define MCF_USB_OTG_TOKEN_TOKEN_PID(x) (((x)&0xF)<<0x4)
#define MCF_USB_OTG_USB_CTRL (*(vuint8 *)(&__IPSBAR[0x1C0100]))
#define MCF_USB_OTG_USB_CTRL_CLK_SRC(x) (((x)&0x3)<<0)
#endif
#if MCF52233
#define MCF_ADC_ADLST1 (*(vuint16*)(&__IPSBAR[0x190006]))
#define MCF_ADC_ADLST2 (*(vuint16*)(&__IPSBAR[0x190008]))
#define MCF_ADC_ADRSLT(x) (*(vuint16*)(&__IPSBAR[0x190012 + ((x)*0x2)]))
#define MCF_ADC_ADSDIS (*(vuint16*)(&__IPSBAR[0x19000A]))
#define MCF_ADC_ADSTAT (*(vuint16*)(&__IPSBAR[0x19000C]))
#define MCF_ADC_CTRL1 (*(vuint16*)(&__IPSBAR[0x190000]))
#define MCF_ADC_CTRL1_SMODE(x) (((x)&0x7)<<0)
#define MCF_ADC_CTRL1_START0 (0x2000)
#define MCF_ADC_CTRL2 (*(vuint16*)(&__IPSBAR[0x190002]))
#define MCF_ADC_POWER (*(vuint16*)(&__IPSBAR[0x190052]))
#define MCF_ADC_POWER_PD0 (0x1)
#define MCF_ADC_POWER_PD1 (0x2)
#define MCF_ADC_POWER_PD2 (0x4)
#define MCF_ADC_POWER_PUDELAY(x) (((x)&0x3F)<<0x4)
#define MCF_CFM_CFMCLKD (*(vuint8 *)(&__IPSBAR[0x1D0002]))
#define MCF_CFM_CFMCLKD_DIV(x) (((x)&0x3F)<<0)
#define MCF_CFM_CFMCLKD_DIVLD (0x80)
#define MCF_CFM_CFMCLKD_PRDIV8 (0x40)
#define MCF_CFM_CFMCMD (*(vuint8 *)(&__IPSBAR[0x1D0024]))
#define MCF_CFM_CFMCMD_PAGE_ERASE (0x40)
#define MCF_CFM_CFMCMD_WORD_PROGRAM (0x20)
#define MCF_CFM_CFMDACC (*(vuint32*)(&__IPSBAR[0x1D0018]))
#define MCF_CFM_CFMMCR (*(vuint16*)(&__IPSBAR[0x1D0000]))
#define MCF_CFM_CFMPROT (*(vuint32*)(&__IPSBAR[0x1D0010]))
#define MCF_CFM_CFMSACC (*(vuint32*)(&__IPSBAR[0x1D0014]))
#define MCF_CFM_CFMSEC_SECSTAT (0x40000000)
#define MCF_CFM_CFMUSTAT (*(vuint8 *)(&__IPSBAR[0x1D0020]))
#define MCF_CFM_CFMUSTAT_ACCERR (0x10)
#define MCF_CFM_CFMUSTAT_CBEIF (0x80)
#define MCF_CFM_CFMUSTAT_CCIF (0x40)
#define MCF_CFM_CFMUSTAT_PVIOL (0x20)
#define MCF_CLOCK_CCHR (*(vuint8 *)(&__IPSBAR[0x120008]))
#define MCF_CLOCK_RTCDR (*(vuint32*)(&__IPSBAR[0x12000C]))
#define MCF_CLOCK_SYNCR (*(vuint16*)(&__IPSBAR[0x120000]))
#define MCF_CLOCK_SYNCR_CLKSRC (0x4)
#define MCF_CLOCK_SYNCR_DISCLK (0x40)
#define MCF_CLOCK_SYNCR_MFD(x) (((x)&0x7)<<0xC)
#define MCF_CLOCK_SYNCR_PLLEN (0x1)
#define MCF_CLOCK_SYNCR_PLLMODE (0x2)
#define MCF_CLOCK_SYNSR (*(vuint8 *)(&__IPSBAR[0x120002]))
#define MCF_CLOCK_SYNSR_LOCK (0x8)
#define MCF_DTIM0_DTMR (*(vuint16*)(&__IPSBAR[0x400]))
#define MCF_DTIM1_DTMR (*(vuint16*)(&__IPSBAR[0x440]))
#define MCF_DTIM2_DTMR (*(vuint16*)(&__IPSBAR[0x480]))
#define MCF_DTIM3_DTMR (*(vuint16*)(&__IPSBAR[0x4C0]))
#define MCF_DTIM_DTCN(x) (*(vuint32*)(&__IPSBAR[0x40C + ((x)*0x40)]))
#define MCF_DTIM_DTMR_CLK_DIV1 (0x2)
#define MCF_DTIM_DTMR_FRR (0x8)
#define MCF_DTIM_DTMR_OM (0x20)
#define MCF_DTIM_DTMR_RST (0x1)
#define MCF_DTIM_DTRR(x) (*(vuint32*)(&__IPSBAR[0x404 + ((x)*0x40)]))
#define MCF_EPORT0_EPFR (*(vuint8 *)(&__IPSBAR[0x130006]))
#define MCF_EPORT0_EPIER (*(vuint8 *)(&__IPSBAR[0x130003]))
#define MCF_EPORT0_EPPAR (*(vuint16*)(&__IPSBAR[0x130000]))
#define MCF_EPORT0_EPPDR (*(vuint8 *)(&__IPSBAR[0x130005]))
#define MCF_EPORT_EPFR(x) (*(vuint8 *)(&__IPSBAR[0x130006 + ((x)*0x10000)]))
#define MCF_EPORT_EPIER(x) (*(vuint8 *)(&__IPSBAR[0x130003 + ((x)*0x10000)]))
#define MCF_EPORT_EPIER_EPIE1 (0x2)
#define MCF_EPORT_EPIER_EPIE4 (0x10)
#define MCF_EPORT_EPPAR(x) (*(vuint16*)(&__IPSBAR[0x130000 + ((x)*0x10000)]))
#define MCF_EPORT_EPPAR_EPPA1_BOTH (0xC)
#define MCF_EPORT_EPPAR_EPPA1_LEVEL (0)
#define MCF_EPORT_EPPAR_EPPA4_BOTH (0x300)
#define MCF_EPORT_EPPAR_EPPA4_LEVEL (0)
#define MCF_EPORT_EPPDR(x) (*(vuint8 *)(&__IPSBAR[0x130005 + ((x)*0x10000)]))
#define MCF_EPORT_EPPDR_EPPD1 (0x2)
#define MCF_GPIO_CLRAN (*(vuint8 *)(&__IPSBAR[0x100052]))
#define MCF_GPIO_CLRAS (*(vuint8 *)(&__IPSBAR[0x100053]))
#define MCF_GPIO_CLRGP (*(vuint8 *)(&__IPSBAR[0x10005E]))
#define MCF_GPIO_CLRNQ (*(vuint8 *)(&__IPSBAR[0x100050]))
#define MCF_GPIO_CLRQS (*(vuint8 *)(&__IPSBAR[0x100054]))
#define MCF_GPIO_CLRTA (*(vuint8 *)(&__IPSBAR[0x100056]))
#define MCF_GPIO_CLRTC (*(vuint8 *)(&__IPSBAR[0x100057]))
#define MCF_GPIO_CLRUA (*(vuint8 *)(&__IPSBAR[0x100059]))
#define MCF_GPIO_CLRUB (*(vuint8 *)(&__IPSBAR[0x10005A]))
#define MCF_GPIO_CLRUC (*(vuint8 *)(&__IPSBAR[0x10005B]))
#define MCF_GPIO_DDRAN (*(vuint8 *)(&__IPSBAR[0x100022]))
#define MCF_GPIO_DDRAS (*(vuint8 *)(&__IPSBAR[0x100023]))
#define MCF_GPIO_DDRGP (*(vuint8 *)(&__IPSBAR[0x10002E]))
#define MCF_GPIO_DDRNQ (*(vuint8 *)(&__IPSBAR[0x100020]))
#define MCF_GPIO_DDRQS (*(vuint8 *)(&__IPSBAR[0x100024]))
#define MCF_GPIO_DDRTA (*(vuint8 *)(&__IPSBAR[0x100026]))
#define MCF_GPIO_DDRTC (*(vuint8 *)(&__IPSBAR[0x100027]))
#define MCF_GPIO_DDRUA (*(vuint8 *)(&__IPSBAR[0x100029]))
#define MCF_GPIO_DDRUB (*(vuint8 *)(&__IPSBAR[0x10002A]))
#define MCF_GPIO_DDRUC (*(vuint8 *)(&__IPSBAR[0x10002B]))
#define MCF_GPIO_PANPAR (*(vuint8 *)(&__IPSBAR[0x10006A]))
#define MCF_GPIO_PASPAR (*(vuint8 *)(&__IPSBAR[0x10006B]))
#define MCF_GPIO_PDDPAR (*(vuint8 *)(&__IPSBAR[0x100074]))
#define MCF_GPIO_PGPPAR (*(vuint8 *)(&__IPSBAR[0x100076]))
#define MCF_GPIO_PNQPAR (*(vuint16*)(&__IPSBAR[0x100068]))
#define MCF_GPIO_PORTAN (*(vuint8 *)(&__IPSBAR[0x10000A]))
#define MCF_GPIO_PQSPAR (*(vuint16*)(&__IPSBAR[0x10006C]))
#define MCF_GPIO_PTAPAR (*(vuint8 *)(&__IPSBAR[0x10006E]))
#define MCF_GPIO_PTCPAR (*(vuint8 *)(&__IPSBAR[0x10006F]))
#define MCF_GPIO_PUAPAR (*(vuint8 *)(&__IPSBAR[0x100071]))
#define MCF_GPIO_PUBPAR (*(vuint8 *)(&__IPSBAR[0x100072]))
#define MCF_GPIO_PUCPAR (*(vuint8 *)(&__IPSBAR[0x100073]))
#define MCF_GPIO_SETAN (*(vuint8 *)(&__IPSBAR[0x10003A]))
#define MCF_GPIO_SETAS (*(vuint8 *)(&__IPSBAR[0x10003B]))
#define MCF_GPIO_SETGP (*(vuint8 *)(&__IPSBAR[0x100046]))
#define MCF_GPIO_SETNQ (*(vuint8 *)(&__IPSBAR[0x100038]))
#define MCF_GPIO_SETQS (*(vuint8 *)(&__IPSBAR[0x10003C]))
#define MCF_GPIO_SETTA (*(vuint8 *)(&__IPSBAR[0x10003E]))
#define MCF_GPIO_SETTC (*(vuint8 *)(&__IPSBAR[0x10003F]))
#define MCF_GPIO_SETUA (*(vuint8 *)(&__IPSBAR[0x100041]))
#define MCF_GPIO_SETUB (*(vuint8 *)(&__IPSBAR[0x100042]))
#define MCF_GPIO_SETUC (*(vuint8 *)(&__IPSBAR[0x100043]))
#define MCF_I2C_I2CR (*(vuint8 *)(&__IPSBAR[0x308]))
#define MCF_I2C_I2CR_IEN (0x80)
#define MCF_I2C_I2CR_MSTA (0x20)
#define MCF_I2C_I2CR_MTX (0x10)
#define MCF_I2C_I2CR_RSTA (0x4)
#define MCF_I2C_I2CR_TXAK (0x8)
#define MCF_I2C_I2DR (*(vuint8 *)(&__IPSBAR[0x310]))
#define MCF_I2C_I2FDR (*(vuint8 *)(&__IPSBAR[0x304]))
#define MCF_I2C_I2FDR_IC(x) (((x)&0x3F)<<0)
#define MCF_I2C_I2SR (*(vuint8 *)(&__IPSBAR[0x30C]))
#define MCF_I2C_I2SR_IAL (0x10)
#define MCF_I2C_I2SR_IBB (0x20)
#define MCF_I2C_I2SR_IIF (0x2)
#define MCF_I2C_I2SR_RXAK (0x1)
#define MCF_INTC0_ICR01 (*(vuint8 *)(&__IPSBAR[0xC41]))
#define MCF_INTC0_ICR04 (*(vuint8 *)(&__IPSBAR[0xC44]))
#define MCF_INTC0_ICR13 (*(vuint8 *)(&__IPSBAR[0xC4D]))
#define MCF_INTC0_ICR53 (*(vuint8 *)(&__IPSBAR[0xC75]))
#define MCF_INTC0_ICR55 (*(vuint8 *)(&__IPSBAR[0xC77]))
#define MCF_INTC0_IMRH (*(vuint32*)(&__IPSBAR[0xC08]))
#define MCF_INTC0_IMRL (*(vuint32*)(&__IPSBAR[0xC0C]))
#define MCF_INTC_ICR01(x) (*(vuint8 *)(&__IPSBAR[0xC41 + ((x)*0x100)]))
#define MCF_INTC_ICR13(x) (*(vuint8 *)(&__IPSBAR[0xC4D + ((x)*0x100)]))
#define MCF_INTC_ICR55(x) (*(vuint8 *)(&__IPSBAR[0xC77 + ((x)*0x100)]))
#define MCF_INTC_ICR_IL(x) (((x)&0x7)<<0x3)
#define MCF_INTC_ICR_IP(x) (((x)&0x7)<<0)
#define MCF_INTC_IMRH(x) (*(vuint32*)(&__IPSBAR[0xC08 + ((x)*0x100)]))
#define MCF_INTC_IMRH_INT_MASK53 (0x200000)
#define MCF_INTC_IMRH_INT_MASK55 (0x800000)
#define MCF_INTC_IMRL(x) (*(vuint32*)(&__IPSBAR[0xC0C + ((x)*0x100)]))
#define MCF_INTC_IMRL_INT_MASK1 (0x2)
#define MCF_INTC_IMRL_INT_MASK13 (0x2000)
#define MCF_INTC_IMRL_INT_MASK4 (0x10)
#define MCF_INTC_IMRL_MASKALL (0x1)
#define MCF_PIT0_PCSR (*(vuint16*)(&__IPSBAR[0x150000]))
#define MCF_PIT0_PMR (*(vuint16*)(&__IPSBAR[0x150002]))
#define MCF_PIT_PCSR_DBG (0x20)
#define MCF_PIT_PCSR_DOZE (0x40)
#define MCF_PIT_PCSR_EN (0x1)
#define MCF_PIT_PCSR_OVW (0x10)
#define MCF_PIT_PCSR_PIE (0x8)
#define MCF_PIT_PCSR_PIF (0x4)
#define MCF_PIT_PCSR_PRE(x) (((x)&0xF)<<0x8)
#define MCF_PIT_PCSR_RLD (0x2)
#define MCF_PMM_LPCR (*(vuint8 *)(&__IPSBAR[0x110007]))
#define MCF_PMM_LPCR_LPMD_DOZE (0x40)
#define MCF_PMM_LPCR_LPMD_STOP (0xC0)
#define MCF_PMM_LPICR (*(vuint8 *)(&__IPSBAR[0x12]))
#define MCF_PMM_LPICR_ENBSTOP (0x80)
#define MCF_PMM_LPICR_XLPM_IPL(x) (((x)&0x7)<<0x4)
#define MCF_PWM_PWMCLK (*(vuint8 *)(&__IPSBAR[0x1B0002]))
#define MCF_PWM_PWMDTY(x) (*(vuint8 *)(&__IPSBAR[0x1B001C + ((x)*0x1)]))
#define MCF_PWM_PWME (*(vuint8 *)(&__IPSBAR[0x1B0000]))
#define MCF_PWM_PWMPER0 (*(vuint8 *)(&__IPSBAR[0x1B0014]))
#define MCF_PWM_PWMPER1 (*(vuint8 *)(&__IPSBAR[0x1B0015]))
#define MCF_PWM_PWMPER2 (*(vuint8 *)(&__IPSBAR[0x1B0016]))
#define MCF_PWM_PWMPER3 (*(vuint8 *)(&__IPSBAR[0x1B0017]))
#define MCF_PWM_PWMPER4 (*(vuint8 *)(&__IPSBAR[0x1B0018]))
#define MCF_PWM_PWMPER5 (*(vuint8 *)(&__IPSBAR[0x1B0019]))
#define MCF_PWM_PWMPER6 (*(vuint8 *)(&__IPSBAR[0x1B001A]))
#define MCF_PWM_PWMPER7 (*(vuint8 *)(&__IPSBAR[0x1B001B]))
#define MCF_PWM_PWMPRCLK (*(vuint8 *)(&__IPSBAR[0x1B0003]))
#define MCF_PWM_PWMPRCLK_PCKA(x) (((x)&0x7)<<0)
#define MCF_PWM_PWMPRCLK_PCKB(x) (((x)&0x7)<<0x4)
#define MCF_PWM_PWMSCLA (*(vuint8 *)(&__IPSBAR[0x1B0008]))
#define MCF_PWM_PWMSCLB (*(vuint8 *)(&__IPSBAR[0x1B0009]))
#define MCF_QSPI_QAR (*(vuint16*)(&__IPSBAR[0x350]))
#define MCF_QSPI_QAR_CMD (0x20)
#define MCF_QSPI_QAR_RECV (0x10)
#define MCF_QSPI_QAR_TRANS (0)
#define MCF_QSPI_QDLYR (*(vuint16*)(&__IPSBAR[0x344]))
#define MCF_QSPI_QDLYR_SPE (0x8000)
#define MCF_QSPI_QDR (*(vuint16*)(&__IPSBAR[0x354]))
#define MCF_QSPI_QDR_CONT (0x8000)
#define MCF_QSPI_QIR (*(vuint16*)(&__IPSBAR[0x34C]))
#define MCF_QSPI_QIR_SPIF (0x1)
#define MCF_QSPI_QMR (*(vuint16*)(&__IPSBAR[0x340]))
#define MCF_QSPI_QMR_CPHA (0x100)
#define MCF_QSPI_QMR_CPOL (0x200)
#define MCF_QSPI_QMR_MSTR (0x8000)
#define MCF_QSPI_QWR (*(vuint16*)(&__IPSBAR[0x348]))
#define MCF_QSPI_QWR_ENDQP(x) (((x)&0xF)<<0x8)
#define MCF_QSPI_QWR_NEWQP(x) (((x)&0xF)<<0)
#define MCF_RCM_RCR (*(vuint8 *)(&__IPSBAR[0x110000]))
#define MCF_RCM_RCR_SOFTRST (0x80)
#define MCF_RCM_RSR (*(vuint8 *)(&__IPSBAR[0x110001]))
#define MCF_SCM_CWCR (*(vuint8 *)(&__IPSBAR[0x11]))
#define MCF_SCM_PPMRH (*(vuint32*)(&__IPSBAR[0xC]))
#define MCF_SCM_PPMRH_CDPIT1 (0x10)
#define MCF_SCM_PPMRL (*(vuint32*)(&__IPSBAR[0x18]))
#define MCF_SCM_RAMBAR (*(vuint32*)(&__IPSBAR[0x8]))
#define MCF_SCM_RAMBAR_BA(x) ((x)&0xFFFF0000)
#define MCF_SCM_RAMBAR_BDE (0x200)
#define MCF_UART0_UIMR (*(vuint8 *)(&__IPSBAR[0x214]))
#define MCF_UART_UBG1(x) (*(vuint8 *)(&__IPSBAR[0x218 + ((x)*0x40)]))
#define MCF_UART_UBG2(x) (*(vuint8 *)(&__IPSBAR[0x21C + ((x)*0x40)]))
#define MCF_UART_UCR(x) (*(vuint8 *)(&__IPSBAR[0x208 + ((x)*0x40)]))
#define MCF_UART_UCR_RESET_MR (0x10)
#define MCF_UART_UCR_RESET_RX (0x20)
#define MCF_UART_UCR_RESET_TX (0x30)
#define MCF_UART_UCR_RX_DISABLED (0x2)
#define MCF_UART_UCR_RX_ENABLED (0x1)
#define MCF_UART_UCR_TX_DISABLED (0x8)
#define MCF_UART_UCR_TX_ENABLED (0x4)
#define MCF_UART_UCSR(x) (*(vuint8 *)(&__IPSBAR[0x204 + ((x)*0x40)]))
#define MCF_UART_UCSR_RCS_SYS_CLK (0xD0)
#define MCF_UART_UCSR_TCS_SYS_CLK (0xD)
#define MCF_UART_UIMR_FFULL_RXRDY (0x2)
#define MCF_UART_UMR(x) (*(vuint8 *)(&__IPSBAR[0x200 + ((x)*0x40)]))
#define MCF_UART_UMR_CM_LOCAL_LOOP (0x80)
#define MCF_UART_UMR_PM_EVEN (0)
#define MCF_UART_UMR_PM_NONE (0x10)
#define MCF_UART_UMR_PM_ODD (0x4)
#define MCF_UART_UMR_SB_STOP_BITS_2 (0xF)
#define MCF_UART_URB(x) (*(vuint8 *)(&__IPSBAR[0x20C + ((x)*0x40)]))
#define MCF_UART_USR(x) (*(vuint8 *)(&__IPSBAR[0x204 + ((x)*0x40)]))
#define MCF_UART_USR_RXRDY (0x1)
#define MCF_UART_USR_TXEMP (0x8)
#define MCF_UART_USR_TXRDY (0x4)
#define MCF_UART_UTB(x) (*(vuint8 *)(&__IPSBAR[0x20C + ((x)*0x40)]))
#endif
#if MCF52259
#define MCF_ADC_ADLST1 (*(vuint16*)(0x40190006))
#define MCF_ADC_ADLST2 (*(vuint16*)(0x40190008))
#define MCF_ADC_ADRSLT(x) (*(vuint16*)(0x40190012 + ((x)*0x2)))
#define MCF_ADC_ADSDIS (*(vuint16*)(0x4019000A))
#define MCF_ADC_ADSTAT (*(vuint16*)(0x4019000C))
#define MCF_ADC_CTRL1 (*(vuint16*)(0x40190000))
#define MCF_ADC_CTRL1_SMODE(x) (((x)&0x7)<<0)
#define MCF_ADC_CTRL1_START0 (0x2000)
#define MCF_ADC_CTRL2 (*(vuint16*)(0x40190002))
#define MCF_ADC_POWER (*(vuint16*)(0x40190052))
#define MCF_ADC_POWER_PD0 (0x1)
#define MCF_ADC_POWER_PD1 (0x2)
#define MCF_ADC_POWER_PD2 (0x4)
#define MCF_ADC_POWER_PUDELAY(x) (((x)&0x3F)<<0x4)
#define MCF_CFM_CFMCLKD (*(vuint8 *)(0x401D0002))
#define MCF_CFM_CFMCLKD_DIV(x) (((x)&0x3F)<<0)
#define MCF_CFM_CFMCLKD_DIVLD (0x80)
#define MCF_CFM_CFMCLKD_PRDIV8 (0x40)
#define MCF_CFM_CFMCMD (*(vuint8 *)(0x401D0024))
#define MCF_CFM_CFMCMD_PAGE_ERASE (0x40)
#define MCF_CFM_CFMCMD_WORD_PROGRAM (0x20)
#define MCF_CFM_CFMDACC (*(vuint32*)(0x401D0018))
#define MCF_CFM_CFMMCR (*(vuint16*)(0x401D0000))
#define MCF_CFM_CFMPROT (*(vuint32*)(0x401D0010))
#define MCF_CFM_CFMSACC (*(vuint32*)(0x401D0014))
#define MCF_CFM_CFMSEC_SECSTAT (0x40000000)
#define MCF_CFM_CFMUSTAT (*(vuint8 *)(0x401D0020))
#define MCF_CFM_CFMUSTAT_ACCERR (0x10)
#define MCF_CFM_CFMUSTAT_CBEIF (0x80)
#define MCF_CFM_CFMUSTAT_CCIF (0x40)
#define MCF_CFM_CFMUSTAT_PVIOL (0x20)
#define MCF_CLOCK_CCHR (*(vuint8 *)(0x40120008))
#define MCF_CLOCK_CCLR (*(vuint8 *)(0x40120009))
#define MCF_CLOCK_OCHR (*(vuint8 *)(0x4012000A))
#define MCF_CLOCK_OCLR (*(vuint8 *)(0x4012000B))
#define MCF_CLOCK_SYNCR (*(vuint16*)(0x40120000))
#define MCF_CLOCK_SYNCR_CLKSRC (0x4)
#define MCF_CLOCK_SYNCR_DISCLK (0x40)
#define MCF_CLOCK_SYNCR_MFD(x) (((x)&0x7)<<0xC)
#define MCF_CLOCK_SYNCR_PLLEN (0x1)
#define MCF_CLOCK_SYNCR_PLLMODE (0x2)
#define MCF_CLOCK_SYNSR (*(vuint8 *)(0x40120002))
#define MCF_CLOCK_SYNSR_LOCK (0x8)
#define MCF_CLOCK_SYNSR_OCOSC (0x40)
#define MCF_DTIM0_DTMR (*(vuint16*)(0x40000400))
#define MCF_DTIM1_DTMR (*(vuint16*)(0x40000440))
#define MCF_DTIM2_DTMR (*(vuint16*)(0x40000480))
#define MCF_DTIM3_DTMR (*(vuint16*)(0x400004C0))
#define MCF_DTIM_DTCN(x) (*(vuint32*)(0x4000040C + ((x)*0x40)))
#define MCF_DTIM_DTMR_CLK_DIV1 (0x2)
#define MCF_DTIM_DTMR_FRR (0x8)
#define MCF_DTIM_DTMR_OM (0x20)
#define MCF_DTIM_DTMR_RST (0x1)
#define MCF_DTIM_DTRR(x) (*(vuint32*)(0x40000404 + ((x)*0x40)))
#define MCF_EPORT_EPFR (*(vuint8 *)(0x40130006))
#define MCF_EPORT_EPIER (*(vuint8 *)(0x40130003))
#define MCF_EPORT_EPIER_EPIE1 (0x2)
#define MCF_EPORT_EPIER_EPIE4 (0x10)
#define MCF_EPORT_EPPAR (*(vuint16*)(0x40130000))
#define MCF_EPORT_EPPAR_EPPA1_BOTH (0xC)
#define MCF_EPORT_EPPAR_EPPA1_LEVEL (0)
#define MCF_EPORT_EPPAR_EPPA4_BOTH (0x300)
#define MCF_EPORT_EPPAR_EPPA4_LEVEL (0)
#define MCF_EPORT_EPPDR (*(vuint8 *)(0x40130005))
#define MCF_EPORT_EPPDR_EPPD1 (0x2)
#define MCF_GPIO_CLRAN (*(vuint8 *)(0x40100052))
#define MCF_GPIO_CLRAS (*(vuint8 *)(0x40100053))
#define MCF_GPIO_CLRNQ (*(vuint8 *)(0x40100050))
#define MCF_GPIO_CLRQS (*(vuint8 *)(0x40100054))
#define MCF_GPIO_CLRTA (*(vuint8 *)(0x40100056))
#define MCF_GPIO_CLRTC (*(vuint8 *)(0x40100057))
#define MCF_GPIO_CLRTI (*(vuint8 *)(0x4010004C))
#define MCF_GPIO_CLRTJ (*(vuint8 *)(0x4010004E))
#define MCF_GPIO_CLRUA (*(vuint8 *)(0x40100059))
#define MCF_GPIO_CLRUB (*(vuint8 *)(0x4010005A))
#define MCF_GPIO_CLRUC (*(vuint8 *)(0x4010005B))
#define MCF_GPIO_DDRAN (*(vuint8 *)(0x40100022))
#define MCF_GPIO_DDRAS (*(vuint8 *)(0x40100023))
#define MCF_GPIO_DDRNQ (*(vuint8 *)(0x40100020))
#define MCF_GPIO_DDRQS (*(vuint8 *)(0x40100024))
#define MCF_GPIO_DDRTA (*(vuint8 *)(0x40100026))
#define MCF_GPIO_DDRTC (*(vuint8 *)(0x40100027))
#define MCF_GPIO_DDRTI (*(vuint8 *)(0x4010001C))
#define MCF_GPIO_DDRTJ (*(vuint8 *)(0x4010001E))
#define MCF_GPIO_DDRUA (*(vuint8 *)(0x40100029))
#define MCF_GPIO_DDRUB (*(vuint8 *)(0x4010002A))
#define MCF_GPIO_DDRUC (*(vuint8 *)(0x4010002B))
#define MCF_GPIO_PANPAR (*(vuint8 *)(0x4010006A))
#define MCF_GPIO_PASPAR (*(vuint8 *)(0x4010006B))
#define MCF_GPIO_PDDPAR (*(vuint8 *)(0x40100074))
#define MCF_GPIO_PNQPAR (*(vuint16*)(0x40100068))
#define MCF_GPIO_PORTAN (*(vuint8 *)(0x4010000A))
#define MCF_GPIO_PQSPAR (*(vuint16*)(0x4010006C))
#define MCF_GPIO_PQSPAR_QSPI_CS2_USB_DM_PDOWN (0xC00)
#define MCF_GPIO_PQSPAR_QSPI_CS3_USB_DP_PDOWN (0x3000)
#define MCF_GPIO_PTAPAR (*(vuint8 *)(0x4010006E))
#define MCF_GPIO_PTCPAR (*(vuint8 *)(0x4010006F))
#define MCF_GPIO_PUAPAR (*(vuint8 *)(0x40100071))
#define MCF_GPIO_PUBPAR (*(vuint8 *)(0x40100072))
#define MCF_GPIO_PUCPAR (*(vuint8 *)(0x40100073))
#define MCF_GPIO_SETAN (*(vuint8 *)(0x4010003A))
#define MCF_GPIO_SETAS (*(vuint8 *)(0x4010003B))
#define MCF_GPIO_SETNQ (*(vuint8 *)(0x40100038))
#define MCF_GPIO_SETQS (*(vuint8 *)(0x4010003C))
#define MCF_GPIO_SETTA (*(vuint8 *)(0x4010003E))
#define MCF_GPIO_SETTC (*(vuint8 *)(0x4010003F))
#define MCF_GPIO_SETTI (*(vuint8 *)(0x40100034))
#define MCF_GPIO_SETTJ (*(vuint8 *)(0x40100036))
#define MCF_GPIO_SETUA (*(vuint8 *)(0x40100041))
#define MCF_GPIO_SETUB (*(vuint8 *)(0x40100042))
#define MCF_GPIO_SETUC (*(vuint8 *)(0x40100043))
#define MCF_I2C0_I2CR (*(vuint8 *)(0x40000308))
#define MCF_I2C0_I2DR (*(vuint8 *)(0x40000310))
#define MCF_I2C0_I2FDR (*(vuint8 *)(0x40000304))
#define MCF_I2C0_I2SR (*(vuint8 *)(0x4000030C))
#define MCF_I2C_I2CR(x) (*(vuint8 *)(0x40000308 + ((x)*0x80)))
#define MCF_I2C_I2CR_IEN (0x80)
#define MCF_I2C_I2CR_MSTA (0x20)
#define MCF_I2C_I2CR_MTX (0x10)
#define MCF_I2C_I2CR_RSTA (0x4)
#define MCF_I2C_I2CR_TXAK (0x8)
#define MCF_I2C_I2DR(x) (*(vuint8 *)(0x40000310 + ((x)*0x80)))
#define MCF_I2C_I2FDR(x) (*(vuint8 *)(0x40000304 + ((x)*0x80)))
#define MCF_I2C_I2FDR_IC(x) (((x)&0x3F)<<0)
#define MCF_I2C_I2SR(x) (*(vuint8 *)(0x4000030C + ((x)*0x80)))
#define MCF_I2C_I2SR_IAL (0x10)
#define MCF_I2C_I2SR_IBB (0x20)
#define MCF_I2C_I2SR_IIF (0x2)
#define MCF_I2C_I2SR_RXAK (0x1)
#define MCF_INTC0_ICR01 (*(vuint8 *)(0x40000C41))
#define MCF_INTC0_ICR04 (*(vuint8 *)(0x40000C44))
#define MCF_INTC0_ICR13 (*(vuint8 *)(0x40000C4D))
#define MCF_INTC0_ICR53 (*(vuint8 *)(0x40000C75))
#define MCF_INTC0_ICR55 (*(vuint8 *)(0x40000C77))
#define MCF_INTC0_IMRH (*(vuint32*)(0x40000C08))
#define MCF_INTC0_IMRL (*(vuint32*)(0x40000C0C))
#define MCF_INTC_ICR01(x) (*(vuint8 *)(0x40000C41 + ((x)*0x100)))
#define MCF_INTC_ICR13(x) (*(vuint8 *)(0x40000C4D + ((x)*0x100)))
#define MCF_INTC_ICR55(x) (*(vuint8 *)(0x40000C77 + ((x)*0x100)))
#define MCF_INTC_ICR_IL(x) (((x)&0x7)<<0x3)
#define MCF_INTC_ICR_IP(x) (((x)&0x7)<<0)
#define MCF_INTC_IMRH(x) (*(vuint32*)(0x40000C08 + ((x)*0x100)))
#define MCF_INTC_IMRH_INT_MASK53 (0x200000)
#define MCF_INTC_IMRH_INT_MASK55 (0x800000)
#define MCF_INTC_IMRL(x) (*(vuint32*)(0x40000C0C + ((x)*0x100)))
#define MCF_INTC_IMRL_INT_MASK1 (0x2)
#define MCF_INTC_IMRL_INT_MASK13 (0x2000)
#define MCF_INTC_IMRL_INT_MASK4 (0x10)
#define MCF_INTC_IMRL_MASKALL (0x1)
#define MCF_PIT0_PCSR (*(vuint16*)(0x40150000))
#define MCF_PIT0_PMR (*(vuint16*)(0x40150002))
#define MCF_PIT_PCSR_DBG (0x20)
#define MCF_PIT_PCSR_DOZE (0x40)
#define MCF_PIT_PCSR_EN (0x1)
#define MCF_PIT_PCSR_OVW (0x10)
#define MCF_PIT_PCSR_PIE (0x8)
#define MCF_PIT_PCSR_PIF (0x4)
#define MCF_PIT_PCSR_PRE(x) (((x)&0xF)<<0x8)
#define MCF_PIT_PCSR_RLD (0x2)
#define MCF_PMM_LPCR (*(vuint8 *)(0x40110007))
#define MCF_PMM_LPCR_LPMD_DOZE (0x40)
#define MCF_PMM_LPCR_LPMD_STOP (0xC0)
#define MCF_PMM_LPICR (*(vuint8 *)(0x40000012))
#define MCF_PMM_LPICR_ENBSTOP (0x80)
#define MCF_PMM_LPICR_XLPM_IPL(x) (((x)&0x7)<<0x4)
#define MCF_PWM_PWMCLK (*(vuint8 *)(0x401B0002))
#define MCF_PWM_PWMDTY(x) (*(vuint8 *)(0x401B001C + ((x)*0x1)))
#define MCF_PWM_PWME (*(vuint8 *)(0x401B0000))
#define MCF_PWM_PWMPER0 (*(vuint8 *)(0x401B0014))
#define MCF_PWM_PWMPER1 (*(vuint8 *)(0x401B0015))
#define MCF_PWM_PWMPER2 (*(vuint8 *)(0x401B0016))
#define MCF_PWM_PWMPER3 (*(vuint8 *)(0x401B0017))
#define MCF_PWM_PWMPER4 (*(vuint8 *)(0x401B0018))
#define MCF_PWM_PWMPER5 (*(vuint8 *)(0x401B0019))
#define MCF_PWM_PWMPER6 (*(vuint8 *)(0x401B001A))
#define MCF_PWM_PWMPER7 (*(vuint8 *)(0x401B001B))
#define MCF_PWM_PWMPRCLK (*(vuint8 *)(0x401B0003))
#define MCF_PWM_PWMPRCLK_PCKA(x) (((x)&0x7)<<0)
#define MCF_PWM_PWMPRCLK_PCKB(x) (((x)&0x7)<<0x4)
#define MCF_PWM_PWMSCLA (*(vuint8 *)(0x401B0008))
#define MCF_PWM_PWMSCLB (*(vuint8 *)(0x401B0009))
#define MCF_QSPI_QAR (*(vuint16*)(0x40000350))
#define MCF_QSPI_QAR_CMD (0x20)
#define MCF_QSPI_QAR_RECV (0x10)
#define MCF_QSPI_QAR_TRANS (0)
#define MCF_QSPI_QDLYR (*(vuint16*)(0x40000344))
#define MCF_QSPI_QDLYR_SPE (0x8000)
#define MCF_QSPI_QDR (*(vuint16*)(0x40000354))
#define MCF_QSPI_QDR_CONT (0x8000)
#define MCF_QSPI_QIR (*(vuint16*)(0x4000034C))
#define MCF_QSPI_QIR_SPIF (0x1)
#define MCF_QSPI_QMR (*(vuint16*)(0x40000340))
#define MCF_QSPI_QMR_CPHA (0x100)
#define MCF_QSPI_QMR_CPOL (0x200)
#define MCF_QSPI_QMR_MSTR (0x8000)
#define MCF_QSPI_QWR (*(vuint16*)(0x40000348))
#define MCF_QSPI_QWR_ENDQP(x) (((x)&0xF)<<0x8)
#define MCF_QSPI_QWR_NEWQP(x) (((x)&0xF)<<0)
#define MCF_RCM_RCR (*(vuint8 *)(0x40110000))
#define MCF_RCM_RCR_SOFTRST (0x80)
#define MCF_RCM_RSR (*(vuint8 *)(0x40110001))
#define MCF_RTC_RTCGOCL (*(vuint32*)(0x40180038))
#define MCF_RTC_RTCGOCU (*(vuint32*)(0x40180034))
#define MCF_SCM_CWCR (*(vuint8 *)(0x40000011))
#define MCF_SCM_PPMRH (*(vuint32*)(0x4000000C))
#define MCF_SCM_PPMRH_CDPIT1 (0x10)
#define MCF_SCM_PPMRL (*(vuint32*)(0x40000018))
#define MCF_SCM_PPMRL_CDFEC (0x200000)
#define MCF_SCM_PPMRL_CDMINIBUS (0x8)
#define MCF_SCM_RAMBAR (*(vuint32*)(0x40000008))
#define MCF_SCM_RAMBAR_BA(x) ((x)&0xFFFF0000)
#define MCF_SCM_RAMBAR_BDE (0x200)
#define MCF_UART0_UIMR (*(vuint8 *)(0x40000214))
#define MCF_UART_UBG1(x) (*(vuint8 *)(0x40000218 + ((x)*0x40)))
#define MCF_UART_UBG2(x) (*(vuint8 *)(0x4000021C + ((x)*0x40)))
#define MCF_UART_UCR(x) (*(vuint8 *)(0x40000208 + ((x)*0x40)))
#define MCF_UART_UCR_RESET_MR (0x10)
#define MCF_UART_UCR_RESET_RX (0x20)
#define MCF_UART_UCR_RESET_TX (0x30)
#define MCF_UART_UCR_RX_DISABLED (0x2)
#define MCF_UART_UCR_RX_ENABLED (0x1)
#define MCF_UART_UCR_TX_DISABLED (0x8)
#define MCF_UART_UCR_TX_ENABLED (0x4)
#define MCF_UART_UCSR(x) (*(vuint8 *)(0x40000204 + ((x)*0x40)))
#define MCF_UART_UCSR_RCS_SYS_CLK (0xD0)
#define MCF_UART_UCSR_TCS_SYS_CLK (0xD)
#define MCF_UART_UIMR_FFULL_RXRDY (0x2)
#define MCF_UART_UMR(x) (*(vuint8 *)(0x40000200 + ((x)*0x40)))
#define MCF_UART_UMR_CM_LOCAL_LOOP (0x80)
#define MCF_UART_UMR_PM_EVEN (0)
#define MCF_UART_UMR_PM_NONE (0x10)
#define MCF_UART_UMR_PM_ODD (0x4)
#define MCF_UART_UMR_SB_STOP_BITS_2 (0xF)
#define MCF_UART_URB(x) (*(vuint8 *)(0x4000020C + ((x)*0x40)))
#define MCF_UART_USR(x) (*(vuint8 *)(0x40000204 + ((x)*0x40)))
#define MCF_UART_USR_RXRDY (0x1)
#define MCF_UART_USR_TXEMP (0x8)
#define MCF_UART_USR_TXRDY (0x4)
#define MCF_UART_UTB(x) (*(vuint8 *)(0x4000020C + ((x)*0x40)))
#define MCF_USB_OTG_ADDR (*(vuint8 *)(0x401C0098))
#define MCF_USB_OTG_ADDR_LS_EN (0x80)
#define MCF_USB_OTG_BDT_PAGE_01 (*(vuint8 *)(0x401C009C))
#define MCF_USB_OTG_BDT_PAGE_02 (*(vuint8 *)(0x401C00B0))
#define MCF_USB_OTG_BDT_PAGE_03 (*(vuint8 *)(0x401C00B4))
#define MCF_USB_OTG_CTL (*(vuint8 *)(0x401C0094))
#define MCF_USB_OTG_CTL_HOST_MODE_EN (0x8)
#define MCF_USB_OTG_CTL_JSTATE (0x80)
#define MCF_USB_OTG_CTL_ODD_RST (0x2)
#define MCF_USB_OTG_CTL_RESET (0x10)
#define MCF_USB_OTG_CTL_TXSUSPEND_TOKENBUSY (0x20)
#define MCF_USB_OTG_CTL_USB_EN_SOF_EN (0x1)
#define MCF_USB_OTG_ENDPT(x) (*(vuint8 *)(0x401C00C0 + ((x)*0x4)))
#define MCF_USB_OTG_ENDPT0 (*(vuint8 *)(0x401C00C0))
#define MCF_USB_OTG_ENDPT_EP_CTL_DIS (0x10)
#define MCF_USB_OTG_ENDPT_EP_HSHK (0x1)
#define MCF_USB_OTG_ENDPT_EP_RX_EN (0x8)
#define MCF_USB_OTG_ENDPT_EP_TX_EN (0x4)
#define MCF_USB_OTG_ENDPT_HOST_WO_HUB (0x80)
#define MCF_USB_OTG_ENDPT_RETRY_DIS (0x40)
#define MCF_USB_OTG_INT_ENB (*(vuint8 *)(0x401C0084))
#define MCF_USB_OTG_INT_ENB_ATTACH_EN (0x40)
#define MCF_USB_OTG_INT_ENB_SLEEP_EN (0x10)
#define MCF_USB_OTG_INT_ENB_TOK_DNE_EN (0x8)
#define MCF_USB_OTG_INT_ENB_USB_RST_EN (0x1)
#define MCF_USB_OTG_INT_STAT (*(vuint8 *)(0x401C0080))
#define MCF_USB_OTG_INT_STAT_ATTACH (0x40)
#define MCF_USB_OTG_INT_STAT_ERROR (0x2)
#define MCF_USB_OTG_INT_STAT_RESUME (0x20)
#define MCF_USB_OTG_INT_STAT_SLEEP (0x10)
#define MCF_USB_OTG_INT_STAT_STALL (0x80)
#define MCF_USB_OTG_INT_STAT_TOK_DNE (0x8)
#define MCF_USB_OTG_INT_STAT_USB_RST (0x1)
#define MCF_USB_OTG_OTG_CTRL (*(vuint8 *)(0x401C001C))
#define MCF_USB_OTG_OTG_CTRL_DM_LOW (0x10)
#define MCF_USB_OTG_OTG_CTRL_DP_HIGH (0x80)
#define MCF_USB_OTG_OTG_CTRL_DP_LOW (0x20)
#define MCF_USB_OTG_OTG_CTRL_OTG_EN (0x4)
#define MCF_USB_OTG_SOF_THLD (*(vuint8 *)(0x401C00AC))
#define MCF_USB_OTG_STAT (*(vuint8 *)(0x401C0090))
#define MCF_USB_OTG_STAT_ODD (0x4)
#define MCF_USB_OTG_STAT_TX (0x8)
#define MCF_USB_OTG_TOKEN (*(vuint8 *)(0x401C00A8))
#define MCF_USB_OTG_TOKEN_TOKEN_ENDPT(x) (((x)&0xF)<<0)
#define MCF_USB_OTG_TOKEN_TOKEN_PID(x) (((x)&0xF)<<0x4)
#define MCF_USB_OTG_USB_CTRL (*(vuint8 *)(0x401C0100))
#define MCF_USB_OTG_USB_CTRL_CLK_SRC(x) (((x)&0x3)<<0)
#endif
